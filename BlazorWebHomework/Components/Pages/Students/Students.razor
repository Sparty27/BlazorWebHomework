@page "/students"
@inject HttpClient HttpClient
@inject DialogService DialogService
@inject NotificationService NotificationService
@rendermode InteractiveServer

<PageTitle>Студенти</PageTitle>
<h3 class="tracking-widest text-4xl font-black text-gray-900 dark:text-white py-[20px] pl-[24px] bg-white shadow-sm">Студенти</h3>

<article class="content px-4">
    <RadzenButton id="add-button" style="border-radius: 25px;" Icon="add" Text="Добавити" Click="CreateStudent"
                  class="bg-gradient-to-r from-purple-500 to-pink-500 my-[25px] rounded-[25px] hover:bg-black"></RadzenButton>

    @if (students == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th><div class="flex justify-content-center">ID</div></th>
                    <th>Дата реєстрації</th>
                    <th>Прізвище</th>
                    <th>Ім'я</th>
                    <th>Група</th>
                    <th>Середній бал</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in students)
                {
                    <tr>
                        <td class="students__data min-w-[50px]">
                            <div class="students__data-id font-extrabold ">
                                @student.StudentId
                            </div>
                        </td>
                        <td class="students__data w-1/5">@student.StudentRegistrationDate.ToLongDateString()</td>
                        <td class="students__data w-1/5">@student.StudentLastName</td>
                        <td class="students__data w-1/5">@student.StudentFirstName</td>
                        <td class="students__data w-1/5">@student.StudentGroupName</td>
                        <td class="students__data w-1/5">@student.StudentAvgScore</td>
                        <td class="students__data w-1/6">
                            <div class="students__data-block flex justify-content-center">
                                <RadzenButton Click="(x => EditStudent(student))">Редагувати</RadzenButton>

                                <RadzenButton Click="(x => ConfirmDelete(student.StudentId))" id="delete-button-student"
                                              class="bg-red-500 delete-button-student">Видалити</RadzenButton>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</article>

@code {
    List<StudentViewModel> students = new List<StudentViewModel>();

    protected override async Task OnInitializedAsync()
    {
        students = await HttpClient.GetFromJsonAsync<List<StudentViewModel>>("api/Student/GetAllStudents") ?? new List<StudentViewModel>();
    }

    async Task CreateStudent()
    {
        var response = await DialogService.OpenAsync<CreateStudent>("Добавити студента", new Dictionary<string, object> { { "Students", students } });        
    }

    async Task EditStudent(StudentViewModel student)
    {
      
    }

    async Task ConfirmDelete(int studentId)
    {
        
    }
}
