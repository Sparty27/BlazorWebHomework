@inject DialogService DialogService
@inject HttpClient HttpClient
@inject NotificationService NotificationService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<RadzenStack Gap="1rem">
    <RadzenRow JustifyContent="JustifyContent.Center">
        <b style="font-size: 20px;">ID @Faculty.FacultyId</b>
    </RadzenRow>
        <RadzenStack Class="rz-p-4 rz-border-radius-1" Style="border: var(--rz-grid-cell-border);" Orientation="Orientation.Vertical">
            <RadzenStack Gap="0" Class="rz-text-truncate">
                <RadzenText TextStyle="TextStyle.Overline" Class="rz-mt-2 rz-my-0" Style="color: var(--rz-text-tertiary-color);">Факультет</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" Class="rz-text-truncate" Style="word-wrap:break-word;white-space:pre-wrap"><b>@Faculty.FacultyName</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" Class="rz-mt-4 rz-mb-0" Style="color: var(--rz-text-tertiary-color);">Примітка</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" Class="rz-text-truncate" Style="word-wrap:break-word;white-space:pre-wrap">@Faculty.FacultyNotes</RadzenText>
            </RadzenStack>
        </RadzenStack>
        <RadzenStack Class="rz-p-4 rz-border-radius-1" Style="border: var(--rz-grid-cell-border);" Orientation="Orientation.Vertical">
            <RadzenStack Gap="0" Class="rz-text-truncate">
                <RadzenText><b>Кафедри:</b></RadzenText>
                <ul>
                    @foreach (string department in Faculty.FacultyDepartments.Split("&&"))
                    {
                        <li class="faculty-department-data">— @department</li>
                    }
                </ul>
            </RadzenStack>
        </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
        <RadzenButton Icon="edit" Click="(x => EditFaculty(Faculty))" id="edit-button-student"></RadzenButton>
        <RadzenButton Icon="delete_forever" Click="(x => ConfirmDelete(Faculty.FacultyId))" id="delete-button-student"
                      class="bg-red-500 delete-button-student" ButtonStyle="ButtonStyle.Danger"></RadzenButton>
    </RadzenStack>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="0.5rem">
        <RadzenButton Click="@((args) => DialogService.Close(false))" Variant="Variant.Flat" ButtonStyle="ButtonStyle.Light" Text="Скасувати" Style="width: 120px" />
        <RadzenButton Attributes="InputAttributesDeleteButton" Click="@((args) => DialogService.Close(true))" Variant="Variant.Flat" Text="ОК" Style="width: 120px" />
    </RadzenStack>
</RadzenStack>
@code {
    [Parameter] public Faculty Faculty { get; set; } = new();
    [Parameter] public List<Faculty> Faculties { get; set; } = new();
    [Parameter] public RadzenDataGrid<Faculty> Grid { get; set; }

    private Dictionary<string, object> InputAttributesDeleteButton { get; set; } =
    new()
    {
        { "background-color", "red" },
    };


    async Task EditFaculty(Faculty faculty)
    {
        var response = await DialogService.OpenAsync<EditFaculty>("Редагувати факультет", 
            new Dictionary<string, object> { { "FacultyParameter", faculty }, { "Faculties", Faculties }, { "Grid", Grid } },
            new DialogOptions() { AutoFocusFirstElement = false });
    }

    async Task ConfirmDelete(int facultyId)
    {
        Console.WriteLine("Faculty id: " + facultyId);
        bool IsConfirmed = await DialogService.Confirm("Ви дійсно хочете видалити вибраний рядок?", "Ви впевнені?",
                                new ConfirmOptions() { AutoFocusFirstElement = false, OkButtonText = "Так", CancelButtonText = "Ні" }) ?? false;

        if (IsConfirmed)
        {
            var result = await HttpClient.DeleteFromJsonAsync<int>($"api/Faculty/DeleteFaculty?facultyId={facultyId}");

            if (result == 1)
            {
                NotificationService.Notify(new NotificationMessage
                    {
                        Severity = NotificationSeverity.Success,
                        Summary = "Успіх!",
                        Detail = "Дані були успішно видалені",
                        Duration = 5000
                    });

                var faculty = Faculties.FirstOrDefault(f => f.FacultyId == facultyId);


                if (faculty is not null) Faculties.Remove(faculty);
                Grid?.Reload();

                DialogService.Close(true);
            }
        }
    }
}
